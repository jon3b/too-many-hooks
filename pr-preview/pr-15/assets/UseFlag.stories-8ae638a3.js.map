{"version":3,"file":"UseFlag.stories-8ae638a3.js","sources":["../../src/stories/UseFlag/Form.tsx","../../src/stories/UseFlag/Form.tsx?raw","../../src/stories/UseFlag/Modal.tsx","../../src/stories/UseFlag/Modal.tsx?raw","../../src/stories/UseFlag/UseFlag.stories.tsx"],"sourcesContent":["import React from 'react'\nimport { useFlag } from 'too-many-hooks'\nimport { Button } from '../../components'\n\nconst Form: React.FC = () => {\n  const [hasUnsavedChanges, { flag: setUnsaved, unflag: setSaved }] = useFlag(false)\n  const [hasBegun, { flag: setHasBegun }] = useFlag(false)\n  const [hasAgreedToTerms, { unflag: resetTermsAgreement, toggle: toggleTermsAgreement }] =\n    useFlag(false)\n\n  const onChange = () => {\n    setUnsaved()\n    setHasBegun()\n    resetTermsAgreement()\n  }\n\n  return (\n    <div className=\"w-96 flex flex-col gap-4\">\n      <label className=\"block text-sm font-medium text-gray-900 dark:text-white\">\n        Your email\n        <input\n          type=\"email\"\n          className=\"bg-gray-50 border border-gray-300 text-gray-900 text-sm rounded-lg focus:ring-blue-500 focus:border-blue-500 block w-full p-2.5 dark:bg-gray-700 dark:border-gray-600 dark:placeholder-gray-400 dark:text-white dark:focus:ring-blue-500 dark:focus:border-blue-500\"\n          placeholder=\"name@example.com\"\n          onChange={onChange}\n          required\n        />\n      </label>\n      <label className=\"block text-sm font-medium text-gray-900 dark:text-white\">\n        Your name\n        <input\n          type=\"name\"\n          className=\"bg-gray-50 border border-gray-300 text-gray-900 text-sm rounded-lg focus:ring-blue-500 focus:border-blue-500 block w-full p-2.5 dark:bg-gray-700 dark:border-gray-600 dark:placeholder-gray-400 dark:text-white dark:focus:ring-blue-500 dark:focus:border-blue-500\"\n          onChange={onChange}\n          required\n        />\n      </label>\n      <label className=\"flex items-center gap-2 text-sm font-medium text-gray-900 dark:text-gray-300\">\n        <input\n          type=\"checkbox\"\n          value=\"\"\n          onChange={toggleTermsAgreement}\n          className=\"w-4 h-4 text-blue-600 bg-gray-100 rounded border-gray-300 focus:ring-blue-500 dark:focus:ring-blue-600 dark:ring-offset-gray-800 focus:ring-2 dark:bg-gray-700 dark:border-gray-600\"\n        />\n        <span>I agree to the Terms of Service and Privacy Policy</span>\n      </label>\n\n      <div className=\"flex gap-2 items-center\">\n        <Button onClick={setSaved} disabled={!hasAgreedToTerms}>\n          Save\n        </Button>\n        {hasBegun &&\n          (hasUnsavedChanges ? (\n            <div className=\"text-orange-500\">&#9888; Unsaved changes</div>\n          ) : (\n            <div className=\"text-green-500\">&#10003; Saved</div>\n          ))}\n      </div>\n    </div>\n  )\n}\n\nexport default Form\n","export default \"import React from 'react'\\nimport { useFlag } from 'too-many-hooks'\\nimport { Button } from '../../components'\\n\\nconst Form: React.FC = () => {\\n  const [hasUnsavedChanges, { flag: setUnsaved, unflag: setSaved }] = useFlag(false)\\n  const [hasBegun, { flag: setHasBegun }] = useFlag(false)\\n  const [hasAgreedToTerms, { unflag: resetTermsAgreement, toggle: toggleTermsAgreement }] =\\n    useFlag(false)\\n\\n  const onChange = () => {\\n    setUnsaved()\\n    setHasBegun()\\n    resetTermsAgreement()\\n  }\\n\\n  return (\\n    <div className=\\\"w-96 flex flex-col gap-4\\\">\\n      <label className=\\\"block text-sm font-medium text-gray-900 dark:text-white\\\">\\n        Your email\\n        <input\\n          type=\\\"email\\\"\\n          className=\\\"bg-gray-50 border border-gray-300 text-gray-900 text-sm rounded-lg focus:ring-blue-500 focus:border-blue-500 block w-full p-2.5 dark:bg-gray-700 dark:border-gray-600 dark:placeholder-gray-400 dark:text-white dark:focus:ring-blue-500 dark:focus:border-blue-500\\\"\\n          placeholder=\\\"name@example.com\\\"\\n          onChange={onChange}\\n          required\\n        />\\n      </label>\\n      <label className=\\\"block text-sm font-medium text-gray-900 dark:text-white\\\">\\n        Your name\\n        <input\\n          type=\\\"name\\\"\\n          className=\\\"bg-gray-50 border border-gray-300 text-gray-900 text-sm rounded-lg focus:ring-blue-500 focus:border-blue-500 block w-full p-2.5 dark:bg-gray-700 dark:border-gray-600 dark:placeholder-gray-400 dark:text-white dark:focus:ring-blue-500 dark:focus:border-blue-500\\\"\\n          onChange={onChange}\\n          required\\n        />\\n      </label>\\n      <label className=\\\"flex items-center gap-2 text-sm font-medium text-gray-900 dark:text-gray-300\\\">\\n        <input\\n          type=\\\"checkbox\\\"\\n          value=\\\"\\\"\\n          onChange={toggleTermsAgreement}\\n          className=\\\"w-4 h-4 text-blue-600 bg-gray-100 rounded border-gray-300 focus:ring-blue-500 dark:focus:ring-blue-600 dark:ring-offset-gray-800 focus:ring-2 dark:bg-gray-700 dark:border-gray-600\\\"\\n        />\\n        <span>I agree to the Terms of Service and Privacy Policy</span>\\n      </label>\\n\\n      <div className=\\\"flex gap-2 items-center\\\">\\n        <Button onClick={setSaved} disabled={!hasAgreedToTerms}>\\n          Save\\n        </Button>\\n        {hasBegun &&\\n          (hasUnsavedChanges ? (\\n            <div className=\\\"text-orange-500\\\">&#9888; Unsaved changes</div>\\n          ) : (\\n            <div className=\\\"text-green-500\\\">&#10003; Saved</div>\\n          ))}\\n      </div>\\n    </div>\\n  )\\n}\\n\\nexport default Form\\n\"","import React from 'react'\nimport { useFlag } from 'too-many-hooks'\nimport { Button, Modal as Modal_ } from '../../components'\nimport '../../index.css'\n\nconst Modal: React.FC = () => {\n  const [isOpen, { flag: open, unflag: close }] = useFlag(false)\n\n  return (\n    <div className=\"bg-white h-screen w-screen flex flex-col items-center justify-center\">\n      <Button onClick={open}>Open modal</Button>\n      <Modal_ isOpen={isOpen} onClose={close}>\n        <div className=\"leading-8\">\n          This modal was opened with a simple<code>onClick=&#123;open&#125;</code>. Clicking\n          <code>&#10005;</code> or outside of the modal will close it via\n          <code>onClick=&#123;close&#125;</code>. No setters needed.\n        </div>\n      </Modal_>\n    </div>\n  )\n}\n\nexport default Modal\n","export default \"import React from 'react'\\nimport { useFlag } from 'too-many-hooks'\\nimport { Button, Modal as Modal_ } from '../../components'\\nimport '../../index.css'\\n\\nconst Modal: React.FC = () => {\\n  const [isOpen, { flag: open, unflag: close }] = useFlag(false)\\n\\n  return (\\n    <div className=\\\"bg-white h-screen w-screen flex flex-col items-center justify-center\\\">\\n      <Button onClick={open}>Open modal</Button>\\n      <Modal_ isOpen={isOpen} onClose={close}>\\n        <div className=\\\"leading-8\\\">\\n          This modal was opened with a simple<code>onClick=&#123;open&#125;</code>. Clicking\\n          <code>&#10005;</code> or outside of the modal will close it via\\n          <code>onClick=&#123;close&#125;</code>. No setters needed.\\n        </div>\\n      </Modal_>\\n    </div>\\n  )\\n}\\n\\nexport default Modal\\n\"","import type { Meta, StoryObj } from '@storybook/react';\nimport Form from './Form';\nimport FORM_CODE from './Form.tsx?raw';\nimport Modal from './Modal';\nimport MODAL_CODE from './Modal.tsx?raw';\nconst meta = ({\n  title: 'Example/UseFlag',\n  tags: ['docsPage']\n} satisfies Meta);\nexport default meta;\nexport const ModalStory: StoryObj<Meta<typeof Modal>> = {\n  name: 'Modal',\n  parameters: {\n    component: Modal,\n    layout: 'fullscreen',\n    docs: {\n      source: {\n        code: MODAL_CODE,\n        language: 'tsx'\n      }\n    }\n  },\n  render: () => <Modal />\n};\nexport const FormStory: StoryObj<Meta<typeof Form>> = {\n  name: 'Form',\n  parameters: {\n    component: Form,\n    layout: 'centered',\n    docs: {\n      source: {\n        code: FORM_CODE,\n        language: 'tsx'\n      }\n    }\n  },\n  render: () => <Form />\n};\nModalStory.parameters = {\n  ...ModalStory.parameters,\n  storySource: {\n    source: \"{\\n  name: 'Modal',\\n  parameters: {\\n    component: Modal,\\n    layout: 'fullscreen',\\n    docs: {\\n      source: {\\n        code: MODAL_CODE,\\n        language: 'tsx'\\n      }\\n    }\\n  },\\n  render: () => <Modal />\\n}\",\n    ...ModalStory.parameters?.storySource\n  }\n};\nFormStory.parameters = {\n  ...FormStory.parameters,\n  storySource: {\n    source: \"{\\n  name: 'Form',\\n  parameters: {\\n    component: Form,\\n    layout: 'centered',\\n    docs: {\\n      source: {\\n        code: FORM_CODE,\\n        language: 'tsx'\\n      }\\n    }\\n  },\\n  render: () => <Form />\\n}\",\n    ...FormStory.parameters?.storySource\n  }\n};"],"names":["Form","hasUnsavedChanges","setUnsaved","setSaved","useFlag","hasBegun","setHasBegun","hasAgreedToTerms","resetTermsAgreement","toggleTermsAgreement","onChange","jsxs","jsx","Button","FORM_CODE","Modal","isOpen","open","close","Modal_","MODAL_CODE","meta","ModalStory","FormStory","_a"],"mappings":"0MAIA,MAAAA,EAAA,IAAA,CACE,KAAA,CAAAC,EAAA,CAAA,KAAAC,EAAA,OAAAC,EAAA,EAAAC,EAAA,EAAA,EACA,CAAAC,EAAA,CAAA,KAAAC,CAAA,CAAA,EAAAF,EAAA,EAAA,EACA,CAAAG,EAAA,CAAA,OAAAC,EAAA,OAAAC,EAAA,EAAAL,EAAA,EAAA,EAGAM,EAAA,IAAA,CACER,IACAI,IACAE,GAAoB,EAGtB,OAAAG,EAAA,MAAA,CAAA,UAAA,2BAAA,SAAA,CAEIA,EAAA,QAAA,CAAA,UAAA,0DAAA,SAAA,CAA2E,aAAAC,EAEzE,QAAC,CAAA,KAAA,QACM,UAAA,sQACK,YAAA,mBACE,SAAAF,EACZ,SAAA,EACQ,CAAA,CACV,EAAA,EACFC,EAAA,QAAA,CAAA,UAAA,0DAAA,SAAA,CAC2E,YAAAC,EAEzE,QAAC,CAAA,KAAA,OACM,UAAA,sQACK,SAAAF,EACV,SAAA,EACQ,CAAA,CACV,EAAA,EACFC,EAAA,QAAA,CAAA,UAAA,+EAAA,SAAA,CAEEC,EAAA,QAAC,CAAA,KAAA,WACM,MAAA,GACC,SAAAH,EACI,UAAA,qLACA,CAAA,EACZG,EAAA,OAAA,CAAA,SAAA,oDAAA,CAAA,CACwD,EAAA,EAC1DD,EAAA,MAAA,CAAA,UAAA,0BAAA,SAAA,CAGEC,EAAAC,EAAA,CAAA,QAAAV,EAAA,SAAA,CAAAI,EAAA,SAAA,OAAA,EAEAF,IAAAJ,EAAAW,EAAA,MAAA,CAAA,UAAA,kBAAA,SAAA,mBAAA,CAAA,EAAAA,EAAA,MAAA,CAAA,UAAA,iBAAA,SAAA,SAAA,CAAA,EAKkD,EAAA,CAEpD,CAAA,CAAA,CAGN,8FC5DA,MAAAE,EAAe;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;ECKf,MAAAC,EAAA,IAAA,CACE,KAAA,CAAAC,EAAA,CAAA,KAAAC,EAAA,OAAAC,EAAA,EAAAd,EAAA,EAAA,EAEA,OAAAO,EAAA,MAAA,CAAA,UAAA,uEAAA,SAAA,CAEIC,EAAAC,EAAA,CAAA,QAAAI,EAAA,SAAA,aAAA,EAAiCL,EAAAO,EAAA,CAAA,OAAAH,EAAA,QAAAE,EAAA,SAAAP,EAAA,MAAA,CAAA,UAAA,YAAA,SAAA,CAEJ,sCAAAC,EAAA,OAAA,CAAA,SAAA,gBAAA,CAAA,EACwC,aAAOA,EAAA,OAAA,CAAA,SAAA,GAAA,CAAA,EAC1D,6CAAOA,EAAA,OAAA,CAAA,SAAA,iBAAA,CAAA,EACU,sBAAO,CAAA,CAAA,CAAA,CAAA,CAE1C,CAAA,CAAA,CAGN,gGCpBA,MAAAQ,EAAe;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,ECKTC,EAAQ,CACZ,MAAO,kBACP,KAAM,CAAC,UAAU,CACnB,EAEaC,EAA2C,CACtD,KAAM,QACN,WAAY,CACV,UAAWP,EACX,OAAQ,aACR,KAAM,CACJ,OAAQ,CACN,KAAMK,EACN,SAAU,KACZ,CACF,CACF,EACA,OAAQ,IAAMR,EAACG,EAAM,EAAA,CACvB,EACaQ,EAAyC,CACpD,KAAM,OACN,WAAY,CACV,UAAWvB,EACX,OAAQ,WACR,KAAM,CACJ,OAAQ,CACN,KAAMc,EACN,SAAU,KACZ,CACF,CACF,EACA,OAAQ,IAAMF,EAACZ,EAAK,EAAA,CACtB,QACAsB,EAAW,WAAa,CACtB,GAAGA,EAAW,WACd,YAAa,CACX,OAAQ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACR,IAAGE,EAAAF,EAAW,aAAX,YAAAE,EAAuB,WAC5B,CACF,QACAD,EAAU,WAAa,CACrB,GAAGA,EAAU,WACb,YAAa,CACX,OAAQ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACR,IAAGC,EAAAD,EAAU,aAAV,YAAAC,EAAsB,WAC3B,CACF"}