{"version":3,"file":"UseFlag.stories-29cbeeda.js","sources":["../../src/stories/UseFlag/Form.tsx","../../src/stories/UseFlag/Form.tsx?raw","../../src/stories/UseFlag/Modal.tsx","../../src/stories/UseFlag/Modal.tsx?raw","../../src/stories/UseFlag/stories.tsx","../../src/stories/UseFlag/UseFlag.stories.mdx"],"sourcesContent":["import React from 'react'\nimport { useFlag } from 'too-many-hooks'\nimport { Button } from '../../components'\n\nconst Form: React.FC = () => {\n  const [hasUnsavedChanges, { flag: setUnsaved, unflag: setSaved }] = useFlag(false)\n  const [hasBegun, { flag: setHasBegun }] = useFlag(false)\n  const [hasAgreedToTerms, { unflag: resetTermsAgreement, toggle: toggleTermsAgreement }] =\n    useFlag(false)\n\n  const onChange = () => {\n    setUnsaved()\n    setHasBegun()\n    resetTermsAgreement()\n  }\n\n  return (\n    <div className=\"flex w-96 flex-col gap-4\">\n      <label className=\"block text-sm font-medium text-gray-900 dark:text-white\">\n        Your email\n        <input\n          type=\"email\"\n          className=\"block w-full rounded-lg border border-gray-300 bg-gray-50 p-2.5 text-sm text-gray-900 focus:border-blue-500 focus:ring-blue-500 dark:border-gray-600 dark:bg-gray-700 dark:text-white dark:placeholder-gray-400 dark:focus:border-blue-500 dark:focus:ring-blue-500\"\n          placeholder=\"name@example.com\"\n          onChange={onChange}\n          required\n        />\n      </label>\n      <label className=\"block text-sm font-medium text-gray-900 dark:text-white\">\n        Your name\n        <input\n          type=\"name\"\n          className=\"block w-full rounded-lg border border-gray-300 bg-gray-50 p-2.5 text-sm text-gray-900 focus:border-blue-500 focus:ring-blue-500 dark:border-gray-600 dark:bg-gray-700 dark:text-white dark:placeholder-gray-400 dark:focus:border-blue-500 dark:focus:ring-blue-500\"\n          onChange={onChange}\n          required\n        />\n      </label>\n      <label className=\"flex items-center gap-2 text-sm font-medium text-gray-900 dark:text-gray-300\">\n        <input\n          type=\"checkbox\"\n          value=\"\"\n          onChange={toggleTermsAgreement}\n          className=\"h-4 w-4 rounded border-gray-300 bg-gray-100 text-blue-600 focus:ring-2 focus:ring-blue-500 dark:border-gray-600 dark:bg-gray-700 dark:ring-offset-gray-800 dark:focus:ring-blue-600\"\n        />\n        <span>I agree to the Terms of Service and Privacy Policy</span>\n      </label>\n\n      <div className=\"flex items-center gap-2\">\n        <Button onClick={setSaved} disabled={!hasAgreedToTerms}>\n          Save\n        </Button>\n        {hasBegun &&\n          (hasUnsavedChanges ? (\n            <div className=\"text-orange-500\">&#9888; Unsaved changes</div>\n          ) : (\n            <div className=\"text-green-500\">&#10003; Saved</div>\n          ))}\n      </div>\n    </div>\n  )\n}\n\nexport default Form\n","export default \"import React from 'react'\\nimport { useFlag } from 'too-many-hooks'\\nimport { Button } from '../../components'\\n\\nconst Form: React.FC = () => {\\n  const [hasUnsavedChanges, { flag: setUnsaved, unflag: setSaved }] = useFlag(false)\\n  const [hasBegun, { flag: setHasBegun }] = useFlag(false)\\n  const [hasAgreedToTerms, { unflag: resetTermsAgreement, toggle: toggleTermsAgreement }] =\\n    useFlag(false)\\n\\n  const onChange = () => {\\n    setUnsaved()\\n    setHasBegun()\\n    resetTermsAgreement()\\n  }\\n\\n  return (\\n    <div className=\\\"flex w-96 flex-col gap-4\\\">\\n      <label className=\\\"block text-sm font-medium text-gray-900 dark:text-white\\\">\\n        Your email\\n        <input\\n          type=\\\"email\\\"\\n          className=\\\"block w-full rounded-lg border border-gray-300 bg-gray-50 p-2.5 text-sm text-gray-900 focus:border-blue-500 focus:ring-blue-500 dark:border-gray-600 dark:bg-gray-700 dark:text-white dark:placeholder-gray-400 dark:focus:border-blue-500 dark:focus:ring-blue-500\\\"\\n          placeholder=\\\"name@example.com\\\"\\n          onChange={onChange}\\n          required\\n        />\\n      </label>\\n      <label className=\\\"block text-sm font-medium text-gray-900 dark:text-white\\\">\\n        Your name\\n        <input\\n          type=\\\"name\\\"\\n          className=\\\"block w-full rounded-lg border border-gray-300 bg-gray-50 p-2.5 text-sm text-gray-900 focus:border-blue-500 focus:ring-blue-500 dark:border-gray-600 dark:bg-gray-700 dark:text-white dark:placeholder-gray-400 dark:focus:border-blue-500 dark:focus:ring-blue-500\\\"\\n          onChange={onChange}\\n          required\\n        />\\n      </label>\\n      <label className=\\\"flex items-center gap-2 text-sm font-medium text-gray-900 dark:text-gray-300\\\">\\n        <input\\n          type=\\\"checkbox\\\"\\n          value=\\\"\\\"\\n          onChange={toggleTermsAgreement}\\n          className=\\\"h-4 w-4 rounded border-gray-300 bg-gray-100 text-blue-600 focus:ring-2 focus:ring-blue-500 dark:border-gray-600 dark:bg-gray-700 dark:ring-offset-gray-800 dark:focus:ring-blue-600\\\"\\n        />\\n        <span>I agree to the Terms of Service and Privacy Policy</span>\\n      </label>\\n\\n      <div className=\\\"flex items-center gap-2\\\">\\n        <Button onClick={setSaved} disabled={!hasAgreedToTerms}>\\n          Save\\n        </Button>\\n        {hasBegun &&\\n          (hasUnsavedChanges ? (\\n            <div className=\\\"text-orange-500\\\">&#9888; Unsaved changes</div>\\n          ) : (\\n            <div className=\\\"text-green-500\\\">&#10003; Saved</div>\\n          ))}\\n      </div>\\n    </div>\\n  )\\n}\\n\\nexport default Form\\n\"","import React from 'react'\nimport { useFlag } from 'too-many-hooks'\nimport { Button, Modal as Modal_ } from '../../components'\nimport '../../index.css'\n\nconst Modal: React.FC = () => {\n  const [isOpen, { flag: open, unflag: close }] = useFlag(false)\n\n  return (\n    <>\n      <Button onClick={open}>Open modal</Button>\n      <Modal_ isOpen={isOpen} onClose={close}>\n        <div className=\"leading-8\">\n          This modal was opened with a simple<code>onClick=&#123;open&#125;</code>. Clicking\n          <code>&#10005;</code> or outside of the modal will close it via\n          <code>onClick=&#123;close&#125;</code>. No setters needed.\n        </div>\n      </Modal_>\n    </>\n  )\n}\n\nexport default Modal\n","export default \"import React from 'react'\\nimport { useFlag } from 'too-many-hooks'\\nimport { Button, Modal as Modal_ } from '../../components'\\nimport '../../index.css'\\n\\nconst Modal: React.FC = () => {\\n  const [isOpen, { flag: open, unflag: close }] = useFlag(false)\\n\\n  return (\\n    <>\\n      <Button onClick={open}>Open modal</Button>\\n      <Modal_ isOpen={isOpen} onClose={close}>\\n        <div className=\\\"leading-8\\\">\\n          This modal was opened with a simple<code>onClick=&#123;open&#125;</code>. Clicking\\n          <code>&#10005;</code> or outside of the modal will close it via\\n          <code>onClick=&#123;close&#125;</code>. No setters needed.\\n        </div>\\n      </Modal_>\\n    </>\\n  )\\n}\\n\\nexport default Modal\\n\"","import type { Meta, StoryObj } from '@storybook/react'\nimport Form from './Form'\nimport FORM_CODE from './Form.tsx?raw'\nimport Modal from './Modal'\nimport MODAL_CODE from './Modal.tsx?raw'\n\nexport const modal: StoryObj<Meta<typeof Modal>> = {\n  parameters: {\n    layout: 'centered',\n    docs: {\n      source: { code: MODAL_CODE, language: 'tsx' },\n    },\n  },\n  render: args => <Modal {...args} />,\n}\n\nexport const form: StoryObj<Meta<typeof Form>> = {\n  parameters: {\n    layout: 'centered',\n    docs: {\n      source: { code: FORM_CODE, language: 'tsx' },\n    },\n  },\n  render: args => <Form {...args} />,\n}\n","import { Canvas, Meta, Story } from '@storybook/addon-docs'\nimport * as stories from './stories'\n\n<Meta title=\"Example/UseFlag\" />\n\n# useFlag\n\nSimply manage boolean state\n\n## Types\n\n```ts\n/**\n * Return values of the `useFlag` hook\n *\n * @export\n * @typedef {UseFlagReturn}\n */\nexport declare type UseFlagReturn = [\n  boolean,\n  {\n    /**\n     * Sets the flag to a specific boolean value\n     *\n     * @readonly\n     * @type {React.Dispatch<React.SetStateAction<boolean>>}\n     */\n    readonly set: React.Dispatch<React.SetStateAction<boolean>>\n    /**\n     * Sets the flag to true\n     *\n     * @readonly\n     * @type {() => void}\n     */\n    readonly flag: () => void\n    /**\n     * Sets the flag to false\n     *\n     * @readonly\n     * @type {() => void}\n     */\n    readonly unflag: () => void\n    /**\n     * Inverts the flag\n     *\n     * @readonly\n     * @type {() => void}\n     */\n    readonly toggle: () => void\n  },\n]\n/**\n * `useFlag` hook type\n *\n * @export\n * @typedef {UseFlag}\n * @param {boolean} initial\n * @returns {UseFlagReturn}\n */\nexport declare type UseFlag = (initial: boolean) => UseFlagReturn\n/**\n * Simplifies boolean state management\n *\n * @implements {UseFlag}\n * @param {boolean} initial\n * @returns {UseFlagReturn}\n */\ndeclare const useFlag: UseFlag\nexport default useFlag\n```\n\n## Examples\n\n### Modal\n\n<Canvas withSource=\"open\">\n  <Story name=\"Modal\" story={stories.modal} />\n</Canvas>\n\n### Form State\n\n<Canvas withSource=\"open\">\n  <Story name=\"Form\" story={stories.form} />\n</Canvas>\n"],"names":["Form","hasUnsavedChanges","setUnsaved","setSaved","useFlag","hasBegun","setHasBegun","hasAgreedToTerms","resetTermsAgreement","toggleTermsAgreement","onChange","jsxs","jsx","Button","FORM_CODE","Modal","isOpen","open","close","Fragment","Modal_","MODAL_CODE","modal","args","form","MDXContent","props","MDXLayout","_provideComponents","_jsx","_createMdxContent","_components","_jsxs","_Fragment","Meta","Canvas","Story","stories.modal","stories.form","_modal_","_form_","componentMeta","__namedExportsOrder"],"mappings":"gwBAIA,MAAAA,EAAA,IAAA,CACE,KAAA,CAAAC,EAAA,CAAA,KAAAC,EAAA,OAAAC,EAAA,EAAAC,EAAA,EAAA,EACA,CAAAC,EAAA,CAAA,KAAAC,CAAA,CAAA,EAAAF,EAAA,EAAA,EACA,CAAAG,EAAA,CAAA,OAAAC,EAAA,OAAAC,EAAA,EAAAL,EAAA,EAAA,EAGAM,EAAA,IAAA,CACER,IACAI,IACAE,GAAoB,EAGtB,OAAAG,EAAA,MAAA,CAAA,UAAA,2BAAA,SAAA,CAEIA,EAAA,QAAA,CAAA,UAAA,0DAAA,SAAA,CAA2E,aAAAC,EAEzE,QAAC,CAAA,KAAA,QACM,UAAA,sQACK,YAAA,mBACE,SAAAF,EACZ,SAAA,EACQ,CAAA,CACV,EAAA,EACFC,EAAA,QAAA,CAAA,UAAA,0DAAA,SAAA,CAC2E,YAAAC,EAEzE,QAAC,CAAA,KAAA,OACM,UAAA,sQACK,SAAAF,EACV,SAAA,EACQ,CAAA,CACV,EAAA,EACFC,EAAA,QAAA,CAAA,UAAA,+EAAA,SAAA,CAEEC,EAAA,QAAC,CAAA,KAAA,WACM,MAAA,GACC,SAAAH,EACI,UAAA,qLACA,CAAA,EACZG,EAAA,OAAA,CAAA,SAAA,oDAAA,CAAA,CACwD,EAAA,EAC1DD,EAAA,MAAA,CAAA,UAAA,0BAAA,SAAA,CAGEC,EAAAC,EAAA,CAAA,QAAAV,EAAA,SAAA,CAAAI,EAAA,SAAA,OAAA,EAEAF,IAAAJ,EAAAW,EAAA,MAAA,CAAA,UAAA,kBAAA,SAAA,mBAAA,CAAA,EAAAA,EAAA,MAAA,CAAA,UAAA,iBAAA,SAAA,SAAA,CAAA,EAKkD,EAAA,CAEpD,CAAA,CAAA,CAGN,8FC5DA,MAAAE,EAAe;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,ECKfC,EAAA,IAAA,CACE,KAAA,CAAAC,EAAA,CAAA,KAAAC,EAAA,OAAAC,EAAA,EAAAd,EAAA,EAAA,EAEA,OAAAO,EAAAQ,EAAA,CAAA,SAAA,CAEIP,EAAAC,EAAA,CAAA,QAAAI,EAAA,SAAA,aAAA,EAAiCL,EAAAQ,EAAA,CAAA,OAAAJ,EAAA,QAAAE,EAAA,SAAAP,EAAA,MAAA,CAAA,UAAA,YAAA,SAAA,CAEJ,sCAAAC,EAAA,OAAA,CAAA,SAAA,gBAAA,CAAA,EACwC,aAAOA,EAAA,OAAA,CAAA,SAAA,GAAA,CAAA,EAC1D,6CAAOA,EAAA,OAAA,CAAA,SAAA,iBAAA,CAAA,EACU,sBAAO,CAAA,CAAA,CAAA,CAAA,CAE1C,CAAA,CAAA,CAGN,gGCpBA,MAAAS,EAAe;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,ECMFC,EAAsC,CACjD,WAAY,CACV,OAAQ,WACR,KAAM,CACJ,OAAQ,CAAE,KAAMD,EAAY,SAAU,KAAM,CAC9C,CACF,EACA,OAAQE,GAASX,EAAAG,EAAA,CAAO,GAAGQ,EAAM,CACnC,EAEaC,EAAoC,CAC/C,WAAY,CACV,OAAQ,WACR,KAAM,CACJ,OAAQ,CAAE,KAAMV,EAAW,SAAU,KAAM,CAC7C,CACF,EACA,OAAQS,GAASX,EAAAZ,EAAA,CAAM,GAAGuB,EAAM,CAClC,ECjBA,SAASE,EAAWC,EAAQ,GAAI,CAC9B,KAAM,CACJ,QAASC,CACb,EAAM,OAAO,OAAO,CAAE,EAAEC,EAAkB,EAAIF,EAAM,UAAU,EAC5D,OAAOC,EAAyBE,EAAKF,EAAW,CAAE,GAAGD,EACnD,SAAuBG,EAAKC,EAAmB,EAAE,CACrD,CAAG,EAAIA,EAAiB,EAEtB,SAASA,GAAoB,CAC3B,MAAMC,EAAc,OAAO,OAAO,CAChC,GAAI,KACJ,EAAG,IACH,GAAI,KACJ,IAAK,MACL,KAAM,OACN,GAAI,IACL,EAAEH,EAAoB,EAAEF,EAAM,UAAU,EAEzC,OAAoBM,EAAMC,EAAW,CACnC,SAAU,CAAcJ,EAAKK,EAAM,CACjC,MAAO,iBACR,CAAA,EAAG;AAAA,EAAmBL,EAAKE,EAAY,GAAI,CAC1C,SAAU,SACX,CAAA,EAAG;AAAA,EAAmBF,EAAKE,EAAY,EAAG,CACzC,SAAU,6BACX,CAAA,EAAG;AAAA,EAAmBF,EAAKE,EAAY,GAAI,CAC1C,SAAU,OACX,CAAA,EAAG;AAAA,EAAmBF,EAAKE,EAAY,IAAK,CAC3C,SAAuBF,EAAKE,EAAY,KAAM,CAC5C,UAAW,cACX,SAAU;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CACpB,CAAS,CACF,CAAA,EAAG;AAAA,EAAmBF,EAAKE,EAAY,GAAI,CAC1C,SAAU,UACX,CAAA,EAAG;AAAA,EAAmBF,EAAKE,EAAY,GAAI,CAC1C,SAAU,OAClB,CAAO,EAAG;AAAA,EAAmBF,EAAKM,EAAQ,CAClC,WAAY,OACZ,SAAuBN,EAAKO,EAAO,CACjC,KAAM,QACN,MAAOC,CACjB,CAAS,CACF,CAAA,EAAG;AAAA,EAAmBR,EAAKE,EAAY,GAAI,CAC1C,SAAU,YAClB,CAAO,EAAG;AAAA,EAAmBF,EAAKM,EAAQ,CAClC,WAAY,OACZ,SAAuBN,EAAKO,EAAO,CACjC,KAAM,OACN,MAAOE,CACjB,CAAS,CACT,CAAO,CAAC,CACR,CAAK,CACF,CACH,CAIY,MAACC,EAAUF,EACvBE,EAAQ,UAAY,QACR,MAACC,EAASF,EACtBE,EAAO,UAAY,OACd,MAACC,EAAgB,CACpB,MAAO,kBACP,KAAM,CAAC,KAAK,EACZ,eAAgB,CAAC,UAAW,QAAQ,CACtC,EACAA,EAAc,WAAaA,EAAc,YAAc,GACvDA,EAAc,WAAW,KAAO,CAAE,GAAIA,EAAc,WAAW,MAAQ,GACrE,KAAMhB,CACR,EAC4B,MAAAiB,EAAA,CAAA,UAAA,QAAA"}